# This script to deploy a three node k3s cluster running in containers to the provisioned the box 
$server = <<-SCRIPT
echo "Getting k3s server IP address assigned by VirtualBox"
IPADDR=`ifconfig enp0s8 | grep mask | awk '{print $2}'| cut -f2 -d:`
echo "This VM has IP address $IPADDR"

echo "Installing dependencies (iscsi, git, helm)..."
apt-get update -q
apt-get install open-iscsi git -y -q
mkdir $HOME/tmp
helm_version="3.3.4"
curl -s -L https://get.helm.sh/helm-v$helm_version-linux-amd64.tar.gz -o $HOME/tmp/helm.tar.gz
tar zxvf $HOME/tmp/helm.tar.gz -C $HOME/tmp
mv $HOME/tmp/linux-amd64/helm /usr/local/bin
chmod +x /usr/local/bin/helm

echo "Installing k3s server..."
curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--bind-address $IPADDR --node-ip $IPADDR --disable-network-policy --node-taint isMaster=true:NoSchedule --flannel-iface enp0s8 --disable local-storage" sh -

# Set up admin creds for the vagrant user
echo "Copying credentials to /home/vagrant..."
sudo --user=vagrant mkdir -p /home/vagrant/.kube
cp -i /etc/rancher/k3s/k3s.yaml /home/vagrant/.kube/config
chown $(id -u vagrant):$(id -g vagrant) /home/vagrant/.kube/config
echo "export KUBECONFIG=/home/vagrant/.kube/config" >> /home/vagrant/.bashrc 

echo "Installing Longhorn..."
kubectl create namespace longhorn-system
git clone https://github.com/longhorn/longhorn.git
helm install longhorn ./longhorn/chart \
  --namespace longhorn-system \
  --set defaultSettings.taintToleration="",defaultSettings.defaultDataPath="/k3sdata",defaultSettings.backup-target="",defaultSettings.storage-over-provisioning-percentage="20" \
  --kubeconfig /etc/rancher/k3s/k3s.yaml

echo "Exporting cluster secret..."
mkdir -p /vagrant/.tmp
cp -f /var/lib/rancher/k3s/server/node-token /vagrant/.tmp
echo $IPADDR > /vagrant/.tmp/.serverIPaddress
SCRIPT

$agent = <<-SCRIPT
echo "Getting k3s agent IP address assigned by VirtualBox"
IPADDR=`ifconfig enp0s8 | grep mask | awk '{print $2}'| cut -f2 -d:`
echo "This VM has IP address $IPADDR"
echo "Provisioning, Formating and Attaching Data Disk..."
parted -s /dev/sdc mklabel gpt mkpart primary 1MiB 53.7GB
mkfs.ext4 /dev/sdc1
mkdir -p /k3sdata
echo "/dev/sdc1 /k3sdata  ext4 defaults  0  0" >> /etc/fstab
mount -a
echo "Disk mounted in /k3sdata"
echo "Installing dependencies (iscsi)..."
apt-get update -q
apt-get install open-iscsi -y -q
echo "Adding k3s-server to hosts file..."
echo "$(cat /vagrant/.tmp/.serverIPaddress)   k3s-server" >> /etc/hosts
echo "Installing k3s agent..."
curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--node-ip $IPADDR --flannel-iface enp0s8" K3S_URL=https://k3s-server:6443 K3S_TOKEN=$(cat /vagrant/.tmp/node-token) sh -
if [ $(hostname) == "k3s-agent-3" ]; then
  echo "Removing tmp directory"
  rm -rf /vagrant/.tmp
fi
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.define "k3s-server" do |server|
    server.vm.hostname = "k3s-server"
    server.vm.box = "ubuntu/bionic64"
    server.vm.provider "virtualbox" do |s|
      s.name = "k3s-server"
      s.memory = 1024
      s.cpus = 2
    end
    server.vm.network "public_network", bridge: "wlp3s0", use_dhcp_assigned_default_route: true
    server.vm.provision "shell", inline: $server
  end
  (1..3).each do |i|
    datadisk=ENV["HOME"]+"/VirtualBox VMs/k3s-agent-#{i}/dataDisk1.vdi"
    config.vm.define "k3s-agent-#{i}" do |node|
      node.vm.hostname = "k3s-agent-#{i}"
      node.vm.box = "ubuntu/bionic64"
      node.vm.provider "virtualbox" do |v|
        v.name = "k3s-agent-#{i}"
        v.memory = 4096
        v.cpus = 2
        unless File.exist? (datadisk)		    
          v.customize ['createhd', '--filename', datadisk, '--size', 50 * 1024]
        end
        v.customize ['storageattach', :id, '--storagectl', 'SCSI', '--port', 2, '--device', 0, '--type',  'hdd', '--medium', datadisk]
      end
      node.vm.network "public_network", bridge: "wlp3s0", use_dhcp_assigned_default_route: true
      node.vm.provision "shell", inline: $agent
    end
  end
end
